name: JHipster Auto Translation

on:
  schedule:
    # 毎日12:00 JST (UTC 03:00)に実行
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      commit_hash:
        description: 'Specific upstream commit hash (optional)'
        required: false
        type: string
      translation_mode:
        description: 'Translation mode'
        required: false
        default: 'selective'
        type: choice
        options:
          - 'all'
          - 'selective'
          - 'new-only'
      dry_run:
        description: 'Dry run mode'
        required: false
        default: false
        type: boolean

jobs:
  auto-translate:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
      
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: .github/auto-translation/.venv
          key: poetry-${{ runner.os }}-${{ hashFiles('.github/auto-translation/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-
      
      - name: Install dependencies
        working-directory: .github/auto-translation
        run: poetry install --no-dev
      
      - name: Setup Git configuration
        run: |
          git config --global user.name "${{ secrets.BOT_GIT_USER }}"
          git config --global user.email "${{ secrets.BOT_GIT_EMAIL }}"
      
      - name: Fetch upstream changes
        working-directory: .github/auto-translation
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          if [ "${{ github.event.inputs.commit_hash }}" != "" ]; then
            poetry run python scripts/fetch_upstream.py --hash "${{ github.event.inputs.commit_hash }}"
          else
            poetry run python scripts/fetch_upstream.py
          fi
      
      - name: Classify changes
        working-directory: .github/auto-translation
        run: |
          poetry run python scripts/classify_changes.py --output-format json > classification.json
          echo "Classification results:"
          poetry run python scripts/classify_changes.py --output-format summary
      
      - name: Check if translation needed
        id: check_translation
        working-directory: .github/auto-translation
        run: |
          translatable_files=$(cat classification.json | jq -r '.translatable_files')
          echo "translatable_files=$translatable_files" >> $GITHUB_OUTPUT
          if [ "$translatable_files" -eq 0 ]; then
            echo "No files to translate, skipping translation steps"
            echo "skip_translation=true" >> $GITHUB_OUTPUT
          else
            echo "Found $translatable_files files to translate"
            echo "skip_translation=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Translate files
        if: steps.check_translation.outputs.skip_translation == 'false'
        working-directory: .github/auto-translation
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          LANGUAGE_TOOL_ENABLED: true
        run: |
          translation_mode="${{ github.event.inputs.translation_mode }}"
          if [ -z "$translation_mode" ]; then
            translation_mode="selective"
          fi
          
          echo "Running translation in $translation_mode mode"
          poetry run python scripts/translate_chunk.py \
            --classification classification.json \
            --mode "$translation_mode"
      
      - name: Post-process translated files
        if: steps.check_translation.outputs.skip_translation == 'false'
        working-directory: .github/auto-translation
        env:
          LANGUAGE_TOOL_ENABLED: true
        run: |
          poetry run python scripts/postprocess.py --classification classification.json
      
      - name: Run tests
        working-directory: .github/auto-translation
        run: |
          # 翻訳後にテストを実行して基本的な問題をチェック
          if [ -f "pyproject.toml" ] && poetry run python -c "import pytest" 2>/dev/null; then
            echo "Running tests..."
            poetry run pytest tests/ -x -v || echo "Tests failed, but continuing..."
          else
            echo "No tests to run"
          fi
      
      - name: Commit and create PR
        working-directory: .github/auto-translation
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BOT_GIT_USER: ${{ secrets.BOT_GIT_USER }}
          BOT_GIT_EMAIL: ${{ secrets.BOT_GIT_EMAIL }}
          DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
        run: |
          poetry run python scripts/commit_and_pr.py \
            --classification classification.json \
            --push-origin true \
            --create-pr true
      
      - name: Upload classification results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: translation-classification
          path: .github/auto-translation/classification.json
          retention-days: 30
      
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: translation-logs
          path: |
            .github/auto-translation/*.log
            /tmp/auto-translation-*.log
          retention-days: 7